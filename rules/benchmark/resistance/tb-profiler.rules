
rule copy_tbprofiler_results:
    threads:
        1
    input:
        "samples/{sample}/resistance/tb-profiler/results/{sample}.results.json",
    output:
        temp("report/resistance/tb-profiler/{sample}.results.json"),
    shell:
        """
        cp {input[0]} {output[0]}
        """


rule tbprofiler_collate:
    container:
        containers["tb-profiler"]
    threads:
        1
    input:
        expand("report/resistance/tb-profiler/{sample}.results.json", sample = read_naming.keys())
    output:
        "report/resistance/tb-profiler/tbprofiler_collate.txt"
    log:
        "report/resistance/tb-profiler/tb-profiler.log",
    shell:
        """
        tb-profiler collate --dir report/resistance/tb-profiler/ --prefix report/resistance/tb-profiler/tbprofiler_collate
        """


rule format_tbprofiler_collated:
    container:
        containers["python_r"]
    threads:
        1
    input:
        "report/resistance/tb-profiler/tbprofiler_collate.txt"
    output:
        "report/resistance/tb-profiler/tbprofiler_benchmark.tsv"
    log:
        "report/resistance/tb-profiler/tb-profiler.log",
    script:"scripts/format_tb-profiler_colated.py"


rule tbprofiler_variant_frequency:
    container:
        containers["python_r"]
    threads:
        1
    input:
        "report/resistance/tb-profiler/tbprofiler_collate.txt"
    output:
        "report/resistance/tb-profiler/tbprofiler_variant_frequency.tsv"
    log:
        "report/resistance/tb-profiler/tbprofiler_variant_frequency.log",
    script:"scripts/frequency_tbprofiler.py"