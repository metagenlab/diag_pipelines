rule determine_mlst:
    conda:
        "../../envs/mlst.yml"
    container:
        containers["mlst"]
    input:
        fasta = "samples/{sample}/annotation/{sample}.fna",
    output:
        mlst = "samples/{sample}/typing/mlst.txt"
    shell:
        """
        mlst --quiet {input[fasta]} | sed "s/.*\///" | sed "s/\.fna//"  > {output[0]}
        """


rule merge_mlst_from_all_samples:
    input:
        mlsts = expand("samples/{sample}/typing/mlst.txt", sample=read_naming.keys())
    output:
        "report/typing/mlst/summary.tsv"
    shell:
        """
        cat {input[mlsts]} > {output}
        """

rule determine_mlst_reference_genome:
    conda:
        "../../envs/mlst.yml"
    container:
        containers["mlst"]
    input:
        genome = "references/{ref}/genome_fna.fna"
    output:
        "references/{ref}/mlst.tsv"
    shell:
        """
        mlst --quiet {input[genome]}  | sed "s/.*\///" | sed "s/\.fsa//" > {output[0]}
        """

rule generate_xlsx_file_from_mlst_results:
    conda:
        "../../envs/python-r.yml"
    container:
        containers["python_r"]
    input:
        "report/typing/mlst/{file}.tsv"
    output:
        "report/typing/mlst/{file}.xlsx"
    script:
        "scripts/mlst_csv_to_xlsx.py"
