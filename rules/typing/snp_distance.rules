rule distance_columns_to_matrix:
    conda:
        "../../envs/python-r.yml"
    container:
        containers["python_r"]    
    params:
        samples = list(read_naming.keys())
    input:
        "typing/{snp_caller}/{core_genome_or_full_genome}/{mapping_method}/{distance_type}.txt",
    output:
        out_xlsx_distance = "typing/{snp_caller}/{core_genome_or_full_genome}/{mapping_method}/{distance_type}.xlsx",
        out_tsv_distance = "typing/{snp_caller}/{core_genome_or_full_genome}/{mapping_method}/{distance_type}.tsv"
    script:
        "scripts/distance_columns_to_matrix.py"


rule compute_minimum_spanning_tree_with_st:
    conda:
        "../../envs/python-r.yml"
    container:
        containers["python_r"]   
    params:
        threshold = config["snp_threshold"],
        mst_size = config["minimum_spanning_tree_size"],
    input:
        dist = "typing/{snp_caller}/{core_genome_or_full_genome}/{mapping_method}/{distance_type}.tsv",
        mlst_samples = "report/typing/mlst/summary.tsv",
    output:
        mst = "report/figures/{snp_caller}/{core_genome_or_full_genome}/{mapping_method}/{distance_type}_mst_with_st.svg"
    log:
        logging_folder + "typing/{snp_caller}/{core_genome_or_full_genome}/{mapping_method}/{distance_type}_mst_with_st.txt"
    script:
        "scripts/minimum_spanning_tree_with_st.R"


rule compute_minimum_spanning_tree_no_st:
    conda:
        "../../envs/python-r.yml"
    container:
        containers["python_r"]
    params:
        threshold=config["snp_threshold"],
        mst_size = config["minimum_spanning_tree_size"],  
    input:
        dist="typing/{snp_caller}/{core_genome_or_full_genome}/{mapping_method}/{distance_type}.tsv",
    output:
        mst="report/figures/{snp_caller}/{core_genome_or_full_genome}/{mapping_method}/{distance_type}_mst_no_st.svg"
    log:
        logging_folder + "typing/{snp_caller}/{core_genome_or_full_genome}/{mapping_method}/{distance_type}_mst_no_st.txt"
    script:
        "scripts/minimum_spanning_tree_no_st.R"
