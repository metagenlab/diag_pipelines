
rule search_resistance_with_rgi_faa:
    conda:
        "../../../envs/rgi.yml"
    container:
        containers["rgi"]
    threads:
        4
    input:
        "samples/{sample}/annotation/{sample}.faa"
    output:
        "samples/{sample}/resistance/rgi_{sample}.json"
    shell:
        """
        rgi main -t protein -i {input[0]} -n {threads} -o $(dirname {output[0]})/rgi_{wildcards.sample}
        """

rule generate_rgi_tsv_file_from_json_file:
    conda:
        "../../../envs/rgi.yml"
    container:
        containers["rgi"]
    input:
        "samples/{sample}/resistance/rgi_{sample}.json"
    output:
        temp("samples/{sample}/resistance/rgi_{sample}_raw.tsv"),

    shell:
        """
        rgi tab -i {input[0]}
        mv $(dirname {output[0]})/rgi_{wildcards.sample}.txt {output[0]}
        """

rule format_rgi_tsv:
    '''
    add start, stop nucleotide sequence to table
    '''
    container:
        containers["python_r"]
    input:
        gbk = "samples/{sample}/annotation/{sample}.gbff",
        rgi_out = "samples/{sample}/resistance/rgi_{sample}_raw.tsv",
        gene_depth_file="samples/{sample}/quality/mapping/bwa/{sample}_assembled_genome/CDS_depth.tab",
        contig_gc_depth_file="samples/{sample}/quality/mapping/bwa/{sample}_assembled_genome/contig_gc_depth_500bp_high_coverage.tab",
    params:
        sample_name="{sample}",
    output:
        "samples/{sample}/resistance/rgi_{sample}.tsv",
    script: "scripts/rgi_format.py"



rule plot_rgi:
    conda:
        "../../../envs/python-r.yml"
    container:
        containers["python_r"]
    input:
        rgi_files=expand("samples/{sample}/resistance/combined_{sample}.tsv", sample=read_naming.keys()),
    params:
        species = lambda wildcards: all_samples.loc[read_naming.keys(), "ScientificName"],
    output:
        expand("report/resistance/{species}.svg", species=list(set(all_samples.loc[read_naming.keys(), "ScientificName"]))),
        rgi_plot="report/resistance/combined_plot_overview.svg",
    script:
        "scripts/plot_gene_presence_heatmap.R"


rule generate_rgi_BLDB_html_report:
    conda:
        "../../../envs/python-r.yml"
    container:
        containers["python_r"]
    input:
        combined_tsv_output="samples/{sample}/resistance/combined_{sample}.tsv",
        contig_gc_depth_file="samples/{sample}/quality/mapping/bwa/{sample}_assembled_genome/contig_gc_depth_500bp_high_coverage.tab",
        samtools_depth = "samples/{sample}/quality/mapping/bwa/{sample}_assembled_genome/mapping.depth",
    params:
        sample="{sample}",
    output:
        "report/resistance/{sample}_combined_report.html",
    script:
        "scripts/generate_combined_html_report.py"

