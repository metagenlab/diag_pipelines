
def check_if_paired(wildcards):
    
    if len(read_naming[wildcards.sample]) == 2:
        return ["samples/{sample}/reads/raw/{sample}_R1.fastq.gz",
                "samples/{sample}/reads/raw/{sample}_R2.fastq.gz"]
    else:
        return ["samples/{sample}/reads/raw/{sample}_R1.fastq.gz"]

rule search_resistance_paired_reads_with_mykrobe:
    conda:
        "../../../envs/mykrobe.yml"
    container:
        containers["mykrobe"]
    params:
        panel = mykrobe_panel,
        species = mykrobe_species[species.split("_")[0]],
        confidence = mykrobe_confidence
    input:
        check_if_paired
    output:
        # samples/8612012420_5247/resistance/mykrobe_8612012420_5247.csv
        "samples/{sample}/resistance/mykrobe_{sample}.json",
        "samples/{sample}/resistance/mykrobe_{sample}.csv"
    log:
        logging_folder + "samples/{sample}/resistance/mykrobe.txt"
    shell:
        """
        if [ "{params.species}" = "staph" ]
        then
            echo Staphylococcus aureus
            mykrobe predict --format json "{wildcards.sample}" "{params.species}" --seq {input} --min_variant_conf {params.confidence} --output samples/{wildcards.sample}/resistance/mykrobe 2> {log}
        else
            echo Mycobacterium tuberculosis
            if [ -z "{params.panel}" ]
            then
                mykrobe predict --format json_and_csv -s "{wildcards.sample}" -S "{params.species}" --seq {input} --min_variant_conf {params.confidence} --output samples/{wildcards.sample}/resistance/mykrobe_{wildcards.sample} 2> {log}
            else
                mykrobe predict --format json_and_csv -s "{wildcards.sample}" -S "{params.species}" --seq {input} --min_variant_conf {params.confidence} --panel {params[panel]} --output samples/{wildcards.sample}/resistance/mykrobe_{wildcards.sample} 2> {log}
            fi
        fi
        """

'''
rule search_resistance_single_reads_with_mykrobe:
    conda:
        "../../../envs/mykrobe.yml"
    container:
        "docker:quay.io/biocontainers/mykrobe:0.7.0--py37h2666aa9_0"
    params:
        panel = mykrobe_panel,
        species = mykrobe_species[species.split("_")[0]],
        confidence = mykrobe_confidence,
    input:
        check_if_paired
    output:
        "samples/{sample}/resistance/mykrobe.json"
    log:
        logging_folder + "samples/{sample}/resistance/mykrobe.txt"
    shell:
        """
        if [ "{params.species}" = "staph" ]
        then
            mykrobe predict "{wildcards.sample}" --format json "{params.species}" --seq {input} --min_variant_conf {params.confidence} --format json_and_csv > {output[0]} 2> {log}
        else
            if [ -z "{params.panel}" ]
            then
                mykrobe predict --format json "{wildcards.sample}" "{params.species}" --seq {input} --min_variant_conf  {params.confidence} --format json_and_csv > {output[0]} 2> {log}
            else
                mykrobe predict --format json "{wildcards.sample}" "{params.species}" --seq {input} --min_variant_conf {params.confidence} --panel {params[panel]} --format json_and_csv > {output[0]} 2> {log}
            fi
        fi
        """



rule generate_mykrobe_tsv_file_from_json_file:
    container:
        containers["python_r"]
    input:
        "samples/{sample}/resistance/mykrobe_{sample}.json",
    output:
        "samples/{sample}/resistance/mykrobe_{sample}.tsv"
    script:
        "scripts/mykrobe_json_to_tsv.py"
'''
