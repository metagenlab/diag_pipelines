

rule download_VFDB_fasta:
    conda:
        "../../envs/curl.yml"
    container:
        "docker://curlimages/curl:latest"
    output:
        "references/virulence/VFDB_setA_pro.fas.gz",
    shell:
        """
        curl http://www.mgc.ac.cn/VFs/Down/VFDB_setA_pro.fas.gz -o {output[0]}
        """

rule extract_VFDB_fasta:
    container:
        "docker://kubeless/unzip:latest"
    input:
        "references/virulence/VFDB_setA_pro.fas.gz",
    output:
        "references/virulence/VFDB_setA_pro.fas",
    shell:
        """
        gunzip {input[0]}
        """

rule filter_VFDB_fasta_by_size:
    conda:
        "../../envs/python-r.yml"
    container:
        "docker://metagenlab/diag-pipeline-python-r:1.1"
    input:
        "references/virulence/VFDB_formated.faa",
    output:
        "references/virulence/VFDB_max_50aa.faa",
        "references/virulence/VFDB_larger_50aa.faa",
    params:
        size_limit = 50,
    script:
        "scripts/fasta_filter_size.py"

rule format_VFDB_fasta:
    conda:
        "../../envs/python-r.yml"
    container:
        "docker://metagenlab/diag-pipeline-python-r:1.1"
    input:
        "references/virulence/VFDB_setA_pro.fas",
    output:
        "references/virulence/VFDB_formated.faa",
        "references/virulence/VFDB_annotations.tab",
    script:
        "scripts/VFDB_format_fasta.py"

rule create_VFDB_blast_database:
    conda:
        "../../envs/blast.yml"
    container:
        "docker://quay.io/biocontainers/blast:2.9.0--pl526h3066fca_4"
    input:
        proteins = "references/virulence/VFDB_larger_50aa.faa",
    output:
        "references/virulence/VFDB_larger_50aa.faa.phr",
    shell:
        """
        makeblastdb -dbtype prot -in {input[proteins]}
        """