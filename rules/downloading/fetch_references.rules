rule get_refseq_urls_complete_genomes:
    params:
        excluded_id = "" #excl_id,
    conda:
        "../../envs/entrez-direct.yml"
    container:
        containers["entrez-direct"]
    output:
        "references/{spec}/url_complete_genomes.txt"
    shell:
        """
        if [ -z "{params.excluded_id}"]
        then
            var=""
        else
            var=$(echo {params.excluded_id} | sed "s/ / -unless Taxid -equals /g" | sed "s/^/-unless Taxid -equals /")
        fi
        taxid=$(esearch -db taxonomy -query "{wildcards.spec}" | efetch -db taxonomy -format native -mode xml | xtract -pattern Taxon -element TaxId)
        esearch -db assembly -query "{wildcards.spec}" | efetch -db assembly -format docsum | xtract -pattern DocumentSummary -unless LatestAccession -if AssemblyStatus -equals "Complete Genome" -if SpeciesTaxid -equals ${{taxid}} -if FtpPath_RefSeq ${{var}} -element Id FtpPath_RefSeq > {output[0]}
        """

rule download_all_complete_genomes_fasta:
    conda:
        "../../envs/entrez-direct.yml"
    container:
        containers["entrez-direct"]
    input:
        "references/{spec}/url_complete_genomes.txt"
    output:
        "references/{spec}/all_complete_genomes_log.txt"
    shell:
        """
        mkdir -p $(dirname {output[0]})/all_complete_genomes/
        while read id ftp; do
            nucl_id=$(echo ${{ftp}} |  sed  "s/\(\/GCF_.*\)/\\1\\1_assembly_report.txt/" | xargs wget -qO- | sed '/^#.*/ d'  | awk ' $4 == "Chromosome" {{print $7}}')
            efetch -db nucleotide -id ${{nucl_id}} -format fasta > $(dirname {output[0]})/all_complete_genomes/${{id}}_genome.fasta
        done < "{input[0]}"
        echo 'ok' > {output[0]}
        """
        #sed "s/-/_/g" because parsnp does not like "-" in sequence headers
