rule copy_raw_assembly_to_reference_folder:
    input:
        contigs = "samples/{sample}/assembly/spades/contigs_500bp_renamed.fasta",
    output:
        fasta = temp("references/{sample}_assembled_genome/genome_fna.fna"),
    shell:
        """
        cp {input[contigs]} {output[fasta]}
        """

rule extract_contig_coverage:
    input:
        # report/qualimap/{sample}/{mapping_method}/{ref}/
        genome_cov = "report/qualimap/{sample}/{mapping_method}/{sample}_assembled_genome/genome_results.txt"
    output:
        extract = "samples/{sample}/{mapping_method}/{sample}_assembled_genome/contig_coverage.txt"
    shell:
        """
        sed -ne '/Coverage per contig/,$ p'  {input[genome_cov]} | grep contig_ | sed "s/^[ \\t]*//" > {output[extract]}
        """

rule extract_assembly_mean_sd_coverage:
    input:
        genome_cov ="report/qualimap/{sample}/{mapping_method}/{sample}_assembled_genome/genome_results.txt"
    output:
        extract = "samples/{sample}/{mapping_method}/{ref}/assembly_coverage.txt"
    shell:
        """
        mean=$(grep "mean coverageData" {input[genome_cov]}  | sed 's/[^0-9\.]//g')
        sd=$(grep "mean coverageData" {input[genome_cov]}  | sed 's/[^0-9\.]//g' )
        echo "mean_depth $mean" >  {output[extract]}
        echo "sd_depth $mean" >>  {output[extract]}
        """

# 
rule filter_contigs_on_coverage:
    container:
        containers["python_r"]
    params:
        depth_cutoff = config["cov_cutoff"],
        length_cutoff = config["length_cutoff"]
    input:
        "samples/{sample}/assembly/spades/contigs_500bp_renamed.fasta",
        "samples/{sample}/{mapping_method}/{sample}_assembled_genome/contig_coverage.txt"
    output:
        "samples/{sample}/assembly/spades/coverage_filtered/{mapping_method}/contigs_500bp_high_coverage.fasta",
        "samples/{sample}/assembly/spades/coverage_filtered/{mapping_method}/contigs_500bp_low_coverage.fasta"
    log:
        logging_folder+"contig_filtering/{mapping_method}/{sample}.log"
    script: "scripts/filter_contigs.py"



rule extract_contigs_longer_than_500bp:
    input:
        "samples/{sample}/assembly/spades/contigs.fasta"
    output:
        "samples/{sample}/assembly/spades/contigs_500bp.fasta"
    shell:
        """
        awk '/^>/ {{print (NR==1)?$0: "\\n" $0;next}} {{printf "%s", $0}} END {{print ""}}' {input} | \
        awk '!/^>/ {{ next }} {{ getline seq }} length(seq) >= 500 {{ print $0 "\\n" seq }}' > {output}
        """


rule rename_contigs:
    input:
        "samples/{sample}/assembly/spades/contigs_500bp.fasta"
    output:
        "samples/{sample}/assembly/spades/contigs_500bp_renamed.fasta"
    shell:
        """
        sed "s/NODE_\\([0-9]\\+\\)_.*/contig_\\1/" {input} > {output}
        """
