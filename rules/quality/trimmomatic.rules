ruleorder: trim_paired_reads_with_trimmomatic > trim_single_reads_with_trimmomatic

rule trim_paired_reads_with_trimmomatic:
    conda:
        "../../envs/trimmomatic.yml"
    container:
        containers["trimmomatic"]        
    input:
        "samples/{sample}/reads/raw/{sample}_R1.fastq.gz",
        "samples/{sample}/reads/raw/{sample}_R2.fastq.gz"
    params:
        conda_path = workflow.deployment_settings.conda_prefix,
        minlength = config["minimum_read_length"],
        minqual = config["minimum_quality_base"],
        adapter_file_name = config["adapter_file_name"],
        adapter_removal_param1 = config["adapter_removal_param1"],
        adapter_removal_param2 = config["adapter_removal_param2"],
        adapter_removal_param3 = config["adapter_removal_param3"],
        sliding_window_size = config["sliding_window_size"],
        sliding_window_quality_threshold = config["sliding_window_quality_threshold"],
    output:
        temp("samples/{sample}/reads/trimmed/R1_paired.fastq"),
        temp("samples/{sample}/reads/trimmed/R1_unpaired.fastq"),
        temp("samples/{sample}/reads/trimmed/R2_paired.fastq"),
        temp("samples/{sample}/reads/trimmed/R2_unpaired.fastq"),
        "samples/{sample}/reads/trimmed/summary.txt",
    log:
        logging_folder+"samples/{sample}/logs/trimmomatic.log"
    shell:
        """
        trimmomatic PE {input[0]} {input[1]} {output[0]} {output[1]} {output[2]} {output[3]} ILLUMINACLIP:{params.conda_path}/${{CONDA_DEFAULT_ENV}}/share/trimmomatic/adapters/{params.adapter_file_name}:{params.adapter_removal_param1}:{params.adapter_removal_param2}:{params.adapter_removal_param3} SLIDINGWINDOW:{params.sliding_window_size}:{params.sliding_window_quality_threshold} LEADING:{params.minqual} TRAILING:{params.minqual} MINLEN:{params.minlength} &> {log}
        cp {log} {output[4]}
        """



rule trim_single_reads_with_trimmomatic:
    conda:
        "../../envs/trimmomatic.yml"
    container:
        containers["trimmomatic"]
    input:
        "samples/{sample}/reads/raw/single_{sample}.fastq.gz"
    params:
        conda_path = workflow.deployment_settings.conda_prefix,
        minlength = config["minimum_read_length"],
        minqual = config["minimum_quality_base"],
        adapter_file_name = config["adapter_file_name"],
        adapter_removal_param1 = config["adapter_removal_param1"],
        adapter_removal_param2 = config["adapter_removal_param2"],
        adapter_removal_param3 = config["adapter_removal_param3"],
    output:
        temp("samples/{sample}/reads/trimmed/single.fastq"),
        "samples/{sample}/reads/trimmed/summary.txt",
    log:
        logging_folder+"samples/{sample}/logs/trimmomatic.log"
    shell:
        """
        trimmomatic SE {input[0]} {output[0]} ILLUMINACLIP:${{CONDA_DEFAULT_ENV}}/share/trimmomatic/adapters/{params.adapter_file_name}:{params.adapter_removal_param1}:{params.adapter_removal_param2}:{params.adapter_removal_param3} LEADING:{params.minqual} TRAILING:{params.minqual} MINLEN:{params.minlength} &> {log}
        cp {log} {output[1]}
        """
