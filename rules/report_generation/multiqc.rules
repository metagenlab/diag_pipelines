rule create_multiqc_report_for_assembly:
    params:
        configfile = multiqc_configfile
    conda:
        "../../envs/multiqc.yml"
    container:
        containers["multiqc"]        
    input:
        assembly=expand("samples/{sample}/multiqc/assembly/log.txt", sample = list(read_naming.keys())),
        mapping=expand("samples/{sample}/multiqc/mapping_to_{sample}_assembled_genome/bwa/log.txt", sample = list(read_naming.keys())),
    output:
        "report/multiqc_assembly/multiqc_report.html",
        "report/multiqc_assembly/multiqc_data/multiqc_data.json"
    log:
        logging_folder + "logs/quality/multiqc/assembly.txt"
    shell:
        """
        multiqc -c {params.configfile} -f -o $(dirname {output[0]}) $(dirname {input[assembly]} {input[mapping]} | tr "\n" " ") &> {log[0]}
        """

rule create_multiqc_report_for_assembly_and_flash:
    params:
        configfile = multiqc_configfile
    conda:
        "../../envs/multiqc.yml"
    container:
        containers["multiqc"]          
    input:
        assembly=expand("samples/{sample}/multiqc/assembly/log_flash.txt", sample = list(read_naming.keys())),
        mapping=expand("samples/{sample}/multiqc/mapping_to_{sample}_assembled_genome/bwa/log.txt", sample = list(read_naming.keys())),
    output:
        "report/multiqc_assembly_flash/multiqc_report.html",
        "report/multiqc_assembly_flash/multiqc_data/multiqc_data.json"
    log:
        logging_folder + "logs/quality/multiqc/assembly.txt"
    shell:
        """
        multiqc -c {params.configfile} -f -o $(dirname {output[0]}) $(dirname {input[assembly]} {input[mapping]} | tr "\n" " ") &> {log[0]}
        """


rule create_multiqc_report_for_mapping:
    params:
        configfile = multiqc_configfile
    conda:
        "../../envs/multiqc.yml"
    container:
        containers["multiqc"]  
    input:
        mapping = expand("samples/{sample}/multiqc/mapping_to_{{ref}}/{{mapping_method}}/log.txt", sample = list(read_naming.keys())),
    output:
        "report/multiqc_mapping_to_{ref}/{mapping_method}/multiqc_report.html",
        "report/multiqc_mapping_to_{ref}/{mapping_method}/multiqc_data/multiqc_data.json"
    log:
        logging_folder + "logs/quality/multiqc/{mapping_method}/mapping_to_{ref}.txt"
    shell:
        """
        multiqc -c {params.configfile} -f -o $(dirname {output[0]}) $(dirname {input[mapping]}) &> {log[0]}
        """
