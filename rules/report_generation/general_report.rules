#!/usr/bin/env python

import itertools
import sys


# todo: add heatmaps overview
# todo: build phylogeny from a set of core markers?
# todo: parsnp core genome automatic setup
# todo: donwload assemblies of a given taxon and build core genome phylogeny
# todo: SNPS: count numer of failed or undeterined positions in vcf (for complete genome or cgMLST)
# todo: count proposrtion of genome with depth lower than 10. If more than xx, highlight in red





if "strain_characterization" in sys.argv:
    # could add more filter
    # eg. no strain download
    if len(read_naming.keys()) < 4:
        rule report_strain_characterization:
            conda:
                "../../envs/python-r.yml"
            container:
                containers["python_r"]
            input:
                virulence_reports = expand("report/virulence/VFDB/{sample}_report.html", sample=read_naming.keys()),
                blast_results = expand("samples/{sample}/virulence/VFDB_results_blast.tsv", sample = read_naming.keys()),
                qualimap_reports = expand("report/qualimap/{sample}/bwa/{sample}_assembled_genome/qualimapReport.html", sample=read_naming.keys()),
                multiqc_assembly = "report/multiqc_assembly/multiqc_report.html",
                resistance_reports = expand("report/resistance/{sample}_rgi_report.html", sample=read_naming.keys()),
                low_cov_fastas = expand("samples/{sample}/assembly/spades/coverage_filtered/bwa/contigs_500bp_low_coverage.fasta", sample=read_naming.keys()),
                high_cov_fastas = expand("samples/{sample}/assembly/spades/coverage_filtered/bwa/contigs_500bp_high_coverage.fasta", sample=read_naming.keys()),
                contig_gc_depth_file_list = expand("samples/{sample}/quality/mapping/bwa/{sample}_assembled_genome/contig_gc_depth_500bp_high_coverage.tab", sample=read_naming.keys()),
                rgi_overview = "report/resistance/rgi_overview.svg",
                mash_results = expand('samples/{sample}/contamination/mash/assembly/distances_formated.tsv', sample=read_naming.keys()),
                low_cov_detail = expand("report/contamination/low_coverage_contigs/{sample}.html", sample=read_naming.keys()),
                mash_detail = expand("report/contamination/mash/assembly/{sample}.html", sample=read_naming.keys()),
                resistance_tables = resistance_tables(),
            params:
                samples = list(read_naming.keys()),
                sample_table = all_samples
            output:
                "report/report_strain_characterization.html",
            script:
                "scripts/report_strain_characterization.py"
    else:
        rule report_strain_characterization:
            conda:
                "../../envs/python-r.yml"
            container:
                containers["python_r"]
            input:
                virulence_reports = expand("report/virulence/VFDB/{sample}_report.html", sample=read_naming.keys()),
                blast_results = expand("samples/{sample}/virulence/VFDB_results_blast.tsv", sample = read_naming.keys()),
                qualimap_reports = expand("report/qualimap/{sample}/bwa/{sample}_assembled_genome/qualimapReport.html", sample=read_naming.keys()),
                multiqc_assembly = "report/multiqc_assembly/multiqc_report.html",
                resistance_reports = expand("report/resistance/{sample}_rgi_report.html", sample=read_naming.keys()),
                low_cov_fastas = expand("samples/{sample}/assembly/spades/coverage_filtered/bwa/contigs_500bp_low_coverage.fasta", sample=read_naming.keys()),
                high_cov_fastas = expand("samples/{sample}/assembly/spades/coverage_filtered/bwa/contigs_500bp_high_coverage.fasta", sample=read_naming.keys()),
                contig_gc_depth_file_list = expand("samples/{sample}/quality/mapping/bwa/{sample}_assembled_genome/contig_gc_depth_500bp_high_coverage.tab", sample=read_naming.keys()),
                rgi_overview = "report/resistance/rgi_overview.svg",
                mash_results = expand('samples/{sample}/contamination/mash/assembly/distances_formated.tsv', sample=read_naming.keys()),
                low_cov_detail = expand("report/contamination/low_coverage_contigs/{sample}.html", sample=read_naming.keys()),
                mash_detail = expand("report/contamination/mash/assembly/{sample}.html", sample=read_naming.keys()),
                resistance_tables = resistance_tables(),
                phylogeny = "phylogeny/checkm/tree.nwk",
            params:
                samples = list(read_naming.keys()),
                sample_table = all_samples
            output:
                "report/report_strain_characterization.html",
            script:
                "scripts/report_strain_characterization.py"
