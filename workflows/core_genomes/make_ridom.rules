import pandas
import yaml

containers = yaml.safe_load(open(os.path.join(workflow.basedir,  "../../envs/singularity/envs.yml"), 'r'))

include:
    "../logging.rules"
    
include:
    "../../rules/downloading/fetch_single_reference.rules"

   
ridom = pandas.read_csv(workflow.basedir + "/../../data/core_genome_dbs/ridom_database.tsv", sep="\t", index_col=0)
 
rule get_scheme_from_ridom:
    params:
        id_ridom = lambda wildcards: str(int(ridom.loc[wildcards.spec, "IdNumber"])),
    output:
        tsv = "core_genomes/cgMLST/{spec}/schemas.tsv"
    shell:
        """
        wget -qO- http://www.cgmlst.org/ncs/schema/{params.id_ridom}/locus/?content-type=csv > {output[tsv]}
        """
    
rule create_bed_from_schema:
    input:
        schema = "core_genomes/cgMLST/{spec}/schemas.tsv",
        genome = lambda wildcards: "references/"+ str(int(ridom.loc[wildcards.spec, "ReferenceGenome"])) + "/genome_fna.fna",
    output:
        bed = "core_genomes/cgMLST/{spec}.bed",
    shell:
        """    
        accession=$(head -n 1 {input[genome]} | cut -f1 -d ' ' | sed "s/>//") 
        tail -n +2 {input[schema]} | cut -f4,5 | awk -v acc="${{accession}}" '{{print acc "\011" ($1 - 1) "\011" ($1 -1 + $2)}}' > {output[bed]}
        """

